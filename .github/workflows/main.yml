name: Compile & Avail OMOD Artifact (GitHub Hosted)

on:
  push:
    branches: [ "master", "dev" ]
  pull_request:
    branches: [ "master" ]

jobs:
  build_and_upload_omod:
    # Use a GitHub-hosted runner (e.g., Ubuntu Latest)
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Set up JDK 8
        uses: actions/setup-java@v4
        with:
          java-version: '8'
          distribution: 'corretto'
          cache: 'maven'

      - name: Install jq (if not pre-installed or to ensure latest)
        # GitHub-hosted runners usually have jq pre-installed, but this ensures it.
        run: |
          sudo apt-get update
          sudo apt-get install -y jq rsync

      - name: Debug Environment Before Build
        run: |
          echo "Current working directory: $(pwd)"
          echo "User running the job: $(whoami)"
          echo "Java version (should be 8):"
          java -version
          echo "jq version:"
          jq -V
          echo "Permissions of current directory:"
          ls -ld .
          echo "Permissions of api/src/main/resources:"
          ls -ld api/src/main/resources || true
          echo "Contents of api/src/main/resources/mamba:"
          ls -al api/src/main/resources/mamba || true

      - name: Build OpenMRS Module with Maven
        run: |
          echo "Starting Maven build..."
          # Using -X for extended debug output to help diagnose packaging issues
          mvn clean install
          echo "Maven build completed."
          echo "Contents of api/target after build:"
          ls -al api/target || true
          echo "Contents of api/target/classes after build (where resources should go):"
          ls -al api/target/classes || true
          echo "Contents of api/target/classes/mamba after build:"
          ls -al api/target/classes/mamba || true
      - name: Find .omod File
        id: find_omod
        run: |
          # Use 'find' to locate the .omod file, assuming it's in a 'target' directory within 'omod'.
          OMOD_PATH=$(find "${{ github.workspace }}" -name "*.omod" | head -n 1)

          if [ -z "$OMOD_PATH" ]; then
            echo "Error: No .omod file found after build. Please check your module's pom.xml and build logs."
            exit 1
          fi

          echo "Found .omod at: $OMOD_PATH"
          # Store the path as a step output, so subsequent steps can use it.
          echo "omod_file_path=$OMOD_PATH" >> "$GITHUB_OUTPUT"

          echo "Listing contents of the omod/target directory:"
          ls -al "${{ github.workspace }}/omod/target" || true

      - name: Upload OMOD as Artifact
        uses: actions/upload-artifact@v4
        with:
          name: openmrs-module-${{ github.run_id }} # Name for the uploaded artifact
          path: ${{ steps.find_omod.outputs.omod_file_path }} # Path to the .omod file
          retention-days: 7 # How long to keep the artifact (optional)

      - name: Workflow Completed
        run: echo "Module compilation completed and OMOD artifact uploaded successfully!"
